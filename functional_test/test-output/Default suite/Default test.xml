<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="MGGG0HH2" ignored="0" name="Default test" tests="52" failures="1" timestamp="05 Jun 2018 16:19:25 GMT" time="83.051" errors="0">
  <testcase name="@AfterMethod getResult" time="0.008" classname="com.testscripts.TestCases">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at com.testscripts.TestCases.getResult(TestCases.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="Payments" time="82.58" classname="com.testscripts.TestCases">
    <failure type="org.openqa.selenium.TimeoutException" message="Expected condition failed: waiting for presence of element located by: By.xpath: //*[@content-desc=&amp;apos;scrollToEndButton&amp;apos;] | //*[@content-desc=&amp;apos;welcomeName&amp;apos;] (tried for 60 second(s) with 500 milliseconds interval)">
      <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.xpath: //*[@content-desc='scrollToEndButton'] | //*[@content-desc='welcomeName'] (tried for 60 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:81)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271)
at com.library.Common.waitUntilElementPresent(Common.java:186)
at com.businessfunctions.Login.acceptTermAndConditions(Login.java:273)
at com.testscripts.TestCases.Payments(TestCases.java:536)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.xpath: //*[@content-desc='scrollToEndButton'] | //*[@content-desc='welcomeName']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'MGGG0HH2', ip: '10.149.250.212', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_152'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.ExpectedConditions.lambda$findElement$0(ExpectedConditions.java:896)
at java.util.Optional.orElseThrow(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:895)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:183)
at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:180)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:248)
... 28 more
]]>
    </failure>
  </testcase> <!-- Payments -->
  <testcase name="addBeneficiaryBusiness" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- addBeneficiaryBusiness -->
  <testcase name="addBeneficiaryPersonal" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- addBeneficiaryPersonal -->
  <testcase name="addBeneficiaryUsingOtpCancel" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- addBeneficiaryUsingOtpCancel -->
  <testcase name="addBeneficiaryWithOTP" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- addBeneficiaryWithOTP -->
  <testcase name="animation" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- animation -->
  <testcase name="backButtons" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- backButtons -->
  <testcase name="billPaymentFromChequingSummaryPageErmsg" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- billPaymentFromChequingSummaryPageErmsg -->
  <testcase name="billPaymentFromChequingsListPage" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- billPaymentFromChequingsListPage -->
  <testcase name="billPaymentFromChequingsSummaryPage" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- billPaymentFromChequingsSummaryPage -->
  <testcase name="billPaymentFromSavingsListPage" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- billPaymentFromSavingsListPage -->
  <testcase name="billPaymentFromSavingsSummaryPage" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- billPaymentFromSavingsSummaryPage -->
  <testcase name="billPaymentFromSavingsSummaryPageErmsg" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- billPaymentFromSavingsSummaryPageErmsg -->
  <testcase name="creditCardonHome" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- creditCardonHome -->
  <testcase name="dailyLmtExceedmsgMetoMetransferChequing" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- dailyLmtExceedmsgMetoMetransferChequing -->
  <testcase name="dailyLmtExceedmsgMetoMetransferSavings" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- dailyLmtExceedmsgMetoMetransferSavings -->
  <testcase name="endToEndMeToMeTransfer" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- endToEndMeToMeTransfer -->
  <testcase name="endToEndMeToYouTransfer" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- endToEndMeToYouTransfer -->
  <testcase name="errorHandlingMeToMeBalanceAndExceed" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- errorHandlingMeToMeBalanceAndExceed -->
  <testcase name="errorHandlingMeToMeOopsMessage" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- errorHandlingMeToMeOopsMessage -->
  <testcase name="errorHandlingMeToMeRestriction" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- errorHandlingMeToMeRestriction -->
  <testcase name="errorHandlingMeToYouBalanceAndExceed" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- errorHandlingMeToYouBalanceAndExceed -->
  <testcase name="errorHandlingMeToYouOopsMessage" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- errorHandlingMeToYouOopsMessage -->
  <testcase name="errorHandlingMeToYouRestriction" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- errorHandlingMeToYouRestriction -->
  <testcase name="feedBackButton" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- feedBackButton -->
  <testcase name="logOutButton" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- logOutButton -->
  <testcase name="loginWithEmptyData" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- loginWithEmptyData -->
  <testcase name="loginWithInvalidPassword" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- loginWithInvalidPassword -->
  <testcase name="loginWithInvalidUsername" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- loginWithInvalidUsername -->
  <testcase name="loginWithValidTestData" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- loginWithValidTestData -->
  <testcase name="loginWithoutRSA" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- loginWithoutRSA -->
  <testcase name="loginWithoutRSAgettoken" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- loginWithoutRSAgettoken -->
  <testcase name="meToMeTransferFromChequingsListPage" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- meToMeTransferFromChequingsListPage -->
  <testcase name="meToMeTransferFromChequingsSummaryPage" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- meToMeTransferFromChequingsSummaryPage -->
  <testcase name="meToMeTransferFromSavingsListPage" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- meToMeTransferFromSavingsListPage -->
  <testcase name="meToMeTransferFromSavingsSummaryPage" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- meToMeTransferFromSavingsSummaryPage -->
  <testcase name="meToYouTransfer" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- meToYouTransfer -->
  <testcase name="meToyouErrChequing" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- meToyouErrChequing -->
  <testcase name="meToyouErrSavings" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- meToyouErrSavings -->
  <testcase name="noBillPayee" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- noBillPayee -->
  <testcase name="passwordRetry" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- passwordRetry -->
  <testcase name="showFiftyTransaction" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- showFiftyTransaction -->
  <testcase name="termsAndConditions" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- termsAndConditions -->
  <testcase name="transfers" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- transfers -->
  <testcase name="verifyHomepageAllAccounts" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- verifyHomepageAllAccounts -->
  <testcase name="verifyHomepageNoAccounts" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- verifyHomepageNoAccounts -->
  <testcase name="verifyHomepageOneAccount" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- verifyHomepageOneAccount -->
  <testcase name="verifyTransferLimitsMetoMe" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- verifyTransferLimitsMetoMe -->
  <testcase name="verifyTransferLimitsMetoYou" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- verifyTransferLimitsMetoYou -->
  <testcase name="withLoanBalanceDetails" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- withLoanBalanceDetails -->
  <testcase name="withSavingsBalanceDetails" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- withSavingsBalanceDetails -->
  <testcase name="zeroLoanBalanceDetails" time="0.0" classname="com.testscripts.TestCases">
    <skipped/>
  </testcase> <!-- zeroLoanBalanceDetails -->
</testsuite> <!-- Default test -->
